###############################################################################
# Makefile automatically generated by Code::Blocks IDE                        #
###############################################################################

# Project:          BallDude
# Project filename: /home/migael/projects/BallDude/BallDude.cbp
# Compiler used:    GNU GCC Compiler

### Variables used in this Makefile
default_CC=gcc
default_CPP=g++
default_LD=g++
default_LIB=ar
default_RESCOMP=

### Compiler/linker options
default_GLOBAL_CFLAGS=
default_PROJECT_CFLAGS= -O2 `sdl-config --cflags`
default_GLOBAL_LDFLAGS=
default_PROJECT_LDFLAGS= `sdl-config --libs` -pthread
default_GLOBAL_INCS= -I/usr/include -I/usr/local/include
default_PROJECT_INCS=
default_GLOBAL_LIBDIRS= -L/usr/lib64
default_PROJECT_LIBDIRS=
default_GLOBAL_LIBS=
default_PROJECT_LIBS= -lGL -lGLU -lSDL_ttf -lSDL_image

### Targets compiler flags
default_CFLAGS= $(default_PROJECT_CFLAGS) $(default_GLOBAL_CFLAGS)

### Targets linker flags
default_LDFLAGS= $(default_PROJECT_LDFLAGS) $(default_GLOBAL_LDFLAGS)

### Targets include directories
default_INCS= $(default_PROJECT_INCS) $(default_GLOBAL_INCS)

### Targets library directories
default_LIBDIRS= $(default_PROJECT_LIBDIRS) $(default_GLOBAL_LIBDIRS)

### Targets libraries
default_LIBS= $(default_PROJECT_LIBS) $(default_GLOBAL_LIBS)

### Objects used in this Makefile
default_OBJS=.objs/AIEngine.o .objs/BDMModelUnit.o .objs/BallUnit.o .objs/BulletExplosion.o .objs/BulletUnit.o .objs/Camera.o .objs/CloudUnit.o .objs/FartCloudUnit.o .objs/FireUnit.o .objs/FontUnit.o .objs/GLExtensionsUnit.o .objs/HealthCritterUnit.o .objs/Interpolate.o .objs/KniveUnit.o .objs/LandScape.o .objs/LoadDataUnit.o .objs/MainEngine.o .objs/MainUnit.o .objs/DrawableObject.o .objs/OctTree.o .objs/OpenGLUnit.o .objs/Player.o .objs/ResourceControlUnit.o .objs/Script.o .objs/ScriptEvent.o .objs/SoundUnit.o .objs/Texture.o .objs/WaterRefract.o .objs/WaterSurface.o .objs/World.o .objs/BDShadow.o .objs/TreeUnit.o
default_LINKOBJS=$(default_OBJS)
default_DEPS=.deps/AIEngine.d .deps/BDMModelUnit.d .deps/BallUnit.d .deps/BulletExplosion.d .deps/BulletUnit.d .deps/Camera.d .deps/CloudUnit.d .deps/FartCloudUnit.d .deps/FireUnit.d .deps/FontUnit.d .deps/GLExtensionsUnit.d .deps/HealthCritterUnit.d .deps/Interpolate.d .deps/KniveUnit.d .deps/LandScape.d .deps/LoadDataUnit.d .deps/MainEngine.d .deps/MainUnit.d .deps/DrawableObject.d .deps/OctTree.d .deps/OpenGLUnit.d .deps/Player.d .deps/ResourceControlUnit.d .deps/Script.d .deps/ScriptEvent.d .deps/SoundUnit.d .deps/Texture.d .deps/WaterRefract.d .deps/WaterSurface.d .deps/World.d .deps/BDShadow.d .deps/TreeUnit.d

### The targets of this project
default_BIN=BallDude

.PHONY: all all-before all-custom all-after clean clean-custom distclean distclean-custom depend_default default-before default-after

all: all-before default all-after


#dist:
#	@zip BallDude.cbp.zip BallDude.cbp Makefile AABB.h AIEngine.cpp AIEngine.h AIObject.h BDError.h BDMModelUnit.cpp BDMModelUnit.h BallUnit.cpp BallUnit.h BulletExplosion.cpp BulletExplosion.h BulletUnit.cpp BulletUnit.h Camera.cpp Camera.h CloudUnit.cpp CloudUnit.h CollisionObj.h FartCloudUnit.cpp FartCloudUnit.h FireUnit.cpp FireUnit.h FontUnit.cpp FontUnit.h GLExtensionsUnit.cpp GLExtensionsUnit.h HealthCritterUnit.cpp HealthCritterUnit.h InputUnit.h Interpolate.cpp Interpolate.h KniveUnit.cpp KniveUnit.h LandScape.cpp LandScape.h LoadDataUnit.cpp LoadDataUnit.h MainEngine.cpp MainEngine.h MainUnit.cpp DrawableObject.cpp DrawableObject.h OctTree.cpp OctTree.h OpenGLUnit.cpp OpenGLUnit.h Particle.h ParticleSystem.h Plane.h Player.cpp Player.h Quaternion.h ResourceControlUnit.cpp ResourceControlUnit.h Script.cpp Script.h ScriptEvent.cpp ScriptEvent.h SoundUnit.cpp SoundUnit.h Texture.cpp Texture.h Triangle.h Vector.h WaterRefract.cpp WaterRefract.h WaterSurface.cpp WaterSurface.h World.cpp World.h def.h

clean_default:
	@echo Cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_RESOURCE)

distclean_default:
	@echo Dist-cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_DEPS) $(default_RESOURCE)

clean: clean_default

distclean: distclean_default

depend_default_DIRS:
	-@if ! test -d .deps; then mkdir .deps; fi

depend_default: depend_default_DIRS $(default_DEPS)

depend: depend_default

default_DIRS:
	-@if ! test -d .objs; then mkdir .objs; fi

default: depend_default default_DIRS default-before $(default_BIN) default-after

$(default_BIN): $(default_LINKOBJS) $(default_RESOURCE)
	@echo Linking executable "BallDude"...
	@$(default_LD) $(default_LIBDIRS) -o $(default_BIN) $(default_LINKOBJS) $(default_RESOURCE) $(default_LDFLAGS) $(default_LIBS)


.deps/AIEngine.d: AIEngine.cpp
	@echo Calculating dependencies for "AIEngine.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/AIEngine.d -MT .objs/AIEngine.o $(default_INCS) AIEngine.cpp

.objs/AIEngine.o: .deps/AIEngine.d
	@echo Compiling "AIEngine.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c AIEngine.cpp -o .objs/AIEngine.o

.deps/BDMModelUnit.d: BDMModelUnit.cpp
	@echo Calculating dependencies for "BDMModelUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/BDMModelUnit.d -MT .objs/BDMModelUnit.o $(default_INCS) BDMModelUnit.cpp

.objs/BDMModelUnit.o: .deps/BDMModelUnit.d
	@echo Compiling "BDMModelUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c BDMModelUnit.cpp -o .objs/BDMModelUnit.o

.deps/BDShadow.d: BDShadow.cpp
	@echo Calculating dependencies for "BDShadow.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/BDShadow.d -MT .objs/BDShadow.o $(default_INCS) BDShadow.cpp

.objs/BDShadow.o: .deps/BDShadow.d
	@echo Compiling "BDShadow.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c BDShadow.cpp -o .objs/BDShadow.o

.deps/BallUnit.d: BallUnit.cpp
	@echo Calculating dependencies for "BallUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/BallUnit.d -MT .objs/BallUnit.o $(default_INCS) BallUnit.cpp

.objs/BallUnit.o: .deps/BallUnit.d
	@echo Compiling "BallUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c BallUnit.cpp -o .objs/BallUnit.o

.deps/BulletExplosion.d: BulletExplosion.cpp
	@echo Calculating dependencies for "BulletExplosion.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/BulletExplosion.d -MT .objs/BulletExplosion.o $(default_INCS) BulletExplosion.cpp

.objs/BulletExplosion.o: .deps/BulletExplosion.d
	@echo Compiling "BulletExplosion.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c BulletExplosion.cpp -o .objs/BulletExplosion.o

.deps/BulletUnit.d: BulletUnit.cpp
	@echo Calculating dependencies for "BulletUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/BulletUnit.d -MT .objs/BulletUnit.o $(default_INCS) BulletUnit.cpp

.objs/BulletUnit.o: .deps/BulletUnit.d
	@echo Compiling "BulletUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c BulletUnit.cpp -o .objs/BulletUnit.o

.deps/Camera.d: Camera.cpp
	@echo Calculating dependencies for "Camera.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Camera.d -MT .objs/Camera.o $(default_INCS) Camera.cpp

.objs/Camera.o: .deps/Camera.d
	@echo Compiling "Camera.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c Camera.cpp -o .objs/Camera.o

.deps/CloudUnit.d: CloudUnit.cpp
	@echo Calculating dependencies for "CloudUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/CloudUnit.d -MT .objs/CloudUnit.o $(default_INCS) CloudUnit.cpp

.objs/CloudUnit.o: .deps/CloudUnit.d
	@echo Compiling "CloudUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c CloudUnit.cpp -o .objs/CloudUnit.o

.deps/FartCloudUnit.d: FartCloudUnit.cpp
	@echo Calculating dependencies for "FartCloudUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/FartCloudUnit.d -MT .objs/FartCloudUnit.o $(default_INCS) FartCloudUnit.cpp

.objs/FartCloudUnit.o: .deps/FartCloudUnit.d
	@echo Compiling "FartCloudUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c FartCloudUnit.cpp -o .objs/FartCloudUnit.o

.deps/FireUnit.d: FireUnit.cpp
	@echo Calculating dependencies for "FireUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/FireUnit.d -MT .objs/FireUnit.o $(default_INCS) FireUnit.cpp

.objs/FireUnit.o: .deps/FireUnit.d
	@echo Compiling "FireUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c FireUnit.cpp -o .objs/FireUnit.o

.deps/FontUnit.d: FontUnit.cpp
	@echo Calculating dependencies for "FontUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/FontUnit.d -MT .objs/FontUnit.o $(default_INCS) FontUnit.cpp

.objs/FontUnit.o: .deps/FontUnit.d
	@echo Compiling "FontUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c FontUnit.cpp -o .objs/FontUnit.o

.deps/GLExtensionsUnit.d: GLExtensionsUnit.cpp
	@echo Calculating dependencies for "GLExtensionsUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/GLExtensionsUnit.d -MT .objs/GLExtensionsUnit.o $(default_INCS) GLExtensionsUnit.cpp

.objs/GLExtensionsUnit.o: .deps/GLExtensionsUnit.d
	@echo Compiling "GLExtensionsUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c GLExtensionsUnit.cpp -o .objs/GLExtensionsUnit.o

.deps/HealthCritterUnit.d: HealthCritterUnit.cpp
	@echo Calculating dependencies for "HealthCritterUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/HealthCritterUnit.d -MT .objs/HealthCritterUnit.o $(default_INCS) HealthCritterUnit.cpp

.objs/HealthCritterUnit.o: .deps/HealthCritterUnit.d
	@echo Compiling "HealthCritterUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c HealthCritterUnit.cpp -o .objs/HealthCritterUnit.o

.deps/Interpolate.d: Interpolate.cpp
	@echo Calculating dependencies for "Interpolate.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Interpolate.d -MT .objs/Interpolate.o $(default_INCS) Interpolate.cpp

.objs/Interpolate.o: .deps/Interpolate.d
	@echo Compiling "Interpolate.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c Interpolate.cpp -o .objs/Interpolate.o

.deps/KniveUnit.d: KniveUnit.cpp
	@echo Calculating dependencies for "KniveUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/KniveUnit.d -MT .objs/KniveUnit.o $(default_INCS) KniveUnit.cpp

.objs/KniveUnit.o: .deps/KniveUnit.d
	@echo Compiling "KniveUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c KniveUnit.cpp -o .objs/KniveUnit.o

.deps/LandScape.d: LandScape.cpp
	@echo Calculating dependencies for "LandScape.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/LandScape.d -MT .objs/LandScape.o $(default_INCS) LandScape.cpp

.objs/LandScape.o: .deps/LandScape.d
	@echo Compiling "LandScape.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c LandScape.cpp -o .objs/LandScape.o

.deps/LoadDataUnit.d: LoadDataUnit.cpp
	@echo Calculating dependencies for "LoadDataUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/LoadDataUnit.d -MT .objs/LoadDataUnit.o $(default_INCS) LoadDataUnit.cpp

.objs/LoadDataUnit.o: .deps/LoadDataUnit.d
	@echo Compiling "LoadDataUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c LoadDataUnit.cpp -o .objs/LoadDataUnit.o

.deps/MainEngine.d: MainEngine.cpp
	@echo Calculating dependencies for "MainEngine.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/MainEngine.d -MT .objs/MainEngine.o $(default_INCS) MainEngine.cpp

.objs/MainEngine.o: .deps/MainEngine.d
	@echo Compiling "MainEngine.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c MainEngine.cpp -o .objs/MainEngine.o

.deps/MainUnit.d: MainUnit.cpp
	@echo Calculating dependencies for "MainUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/MainUnit.d -MT .objs/MainUnit.o $(default_INCS) MainUnit.cpp

.objs/MainUnit.o: .deps/MainUnit.d
	@echo Compiling "MainUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c MainUnit.cpp -o .objs/MainUnit.o

.deps/DrawableObject.d: DrawableObject.cpp
	@echo Calculating dependencies for "DrawableObject.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/DrawableObject.d -MT .objs/DrawableObject.o $(default_INCS) DrawableObject.cpp

.objs/DrawableObject.o: .deps/DrawableObject.d
	@echo Compiling "DrawableObject.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c DrawableObject.cpp -o .objs/DrawableObject.o

.deps/OctTree.d: OctTree.cpp
	@echo Calculating dependencies for "OctTree.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/OctTree.d -MT .objs/OctTree.o $(default_INCS) OctTree.cpp

.objs/OctTree.o: .deps/OctTree.d
	@echo Compiling "OctTree.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c OctTree.cpp -o .objs/OctTree.o

.deps/OpenGLUnit.d: OpenGLUnit.cpp
	@echo Calculating dependencies for "OpenGLUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/OpenGLUnit.d -MT .objs/OpenGLUnit.o $(default_INCS) OpenGLUnit.cpp

.objs/OpenGLUnit.o: .deps/OpenGLUnit.d
	@echo Compiling "OpenGLUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c OpenGLUnit.cpp -o .objs/OpenGLUnit.o

.deps/Player.d: Player.cpp
	@echo Calculating dependencies for "Player.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Player.d -MT .objs/Player.o $(default_INCS) Player.cpp

.objs/Player.o: .deps/Player.d
	@echo Compiling "Player.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c Player.cpp -o .objs/Player.o

.deps/ResourceControlUnit.d: ResourceControlUnit.cpp
	@echo Calculating dependencies for "ResourceControlUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/ResourceControlUnit.d -MT .objs/ResourceControlUnit.o $(default_INCS) ResourceControlUnit.cpp

.objs/ResourceControlUnit.o: .deps/ResourceControlUnit.d
	@echo Compiling "ResourceControlUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ResourceControlUnit.cpp -o .objs/ResourceControlUnit.o

.deps/Script.d: Script.cpp
	@echo Calculating dependencies for "Script.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Script.d -MT .objs/Script.o $(default_INCS) Script.cpp

.objs/Script.o: .deps/Script.d
	@echo Compiling "Script.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c Script.cpp -o .objs/Script.o

.deps/ScriptEvent.d: ScriptEvent.cpp
	@echo Calculating dependencies for "ScriptEvent.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/ScriptEvent.d -MT .objs/ScriptEvent.o $(default_INCS) ScriptEvent.cpp

.objs/ScriptEvent.o: .deps/ScriptEvent.d
	@echo Compiling "ScriptEvent.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ScriptEvent.cpp -o .objs/ScriptEvent.o

.deps/SoundUnit.d: SoundUnit.cpp
	@echo Calculating dependencies for "SoundUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/SoundUnit.d -MT .objs/SoundUnit.o $(default_INCS) SoundUnit.cpp

.objs/SoundUnit.o: .deps/SoundUnit.d
	@echo Compiling "SoundUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c SoundUnit.cpp -o .objs/SoundUnit.o

.deps/Texture.d: Texture.cpp
	@echo Calculating dependencies for "Texture.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Texture.d -MT .objs/Texture.o $(default_INCS) Texture.cpp

.objs/Texture.o: .deps/Texture.d
	@echo Compiling "Texture.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c Texture.cpp -o .objs/Texture.o

.deps/TreeUnit.d: TreeUnit.cpp
	@echo Calculating dependencies for "TreeUnit.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/TreeUnit.d -MT .objs/TreeUnit.o $(default_INCS) TreeUnit.cpp

.objs/TreeUnit.o: .deps/TreeUnit.d
	@echo Compiling "TreeUnit.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c TreeUnit.cpp -o .objs/TreeUnit.o

.deps/WaterRefract.d: WaterRefract.cpp
	@echo Calculating dependencies for "WaterRefract.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/WaterRefract.d -MT .objs/WaterRefract.o $(default_INCS) WaterRefract.cpp

.objs/WaterRefract.o: .deps/WaterRefract.d
	@echo Compiling "WaterRefract.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c WaterRefract.cpp -o .objs/WaterRefract.o

.deps/WaterSurface.d: WaterSurface.cpp
	@echo Calculating dependencies for "WaterSurface.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/WaterSurface.d -MT .objs/WaterSurface.o $(default_INCS) WaterSurface.cpp

.objs/WaterSurface.o: .deps/WaterSurface.d
	@echo Compiling "WaterSurface.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c WaterSurface.cpp -o .objs/WaterSurface.o

.deps/World.d: World.cpp
	@echo Calculating dependencies for "World.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/World.d -MT .objs/World.o $(default_INCS) World.cpp

.objs/World.o: .deps/World.d
	@echo Compiling "World.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c World.cpp -o .objs/World.o


